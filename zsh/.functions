#
# Functions
# ---------------------------------------------------------------------

# -- Shell Commands ---------------

# Create a new directory and enter it
function mkd() {
  mkdir -p "$@" && cd "$@"
}

# -- Applications -----------------

# Nautilus
# `o` with no arguments opens current directory, otherwise opens the given
# location
function n() {
  if [ $# -eq 0 ]; then
    nautilus .
  else
    nautilus "$@"
  fi
}

# Sublime Text
# `s` with no arguments opens the current directory in Sublime Text, otherwise
# opens the given location
function s() {
  if [ $# -eq 0 ]; then
    subl .
  else
    subl "$@"
  fi
}

# Vim
# `v` with no arguments opens the current directory in Vim, otherwise opens the
# given location
function v() {
  if [ $# -eq 0 ]; then
    vim .
  else
    vim "$@"
  fi
}

# -- Homestead / Laravel / PHP ----

function homestead() {
  (cd ~/Homestead && vagrant $*)
}

# -- Extras -----------------------

# Creates something for me to do.
#
# I've used literally every todo list, app, program, script, everything. Even
# the ones you are building and haven't released yet.
#
# I've found that they're all nice in their nice ways, but I still don't use
# them, thus defeating the purpose of a todo list.
#
# All `todo` does is put a file on my Desktop with the filename given. That's
# it. I aggressively prune my desktop of old tasks and keep one or two on there
# at a time. Once I've finished a todo, I just delete the file. That's it.
#
# Millions of dollars later and `touch` wins.
# set -e

# Run our new web 2.0 todo list application and raise millions of VC dollars.
function todo() {
  touch $DESKTOP/"$*"
}
